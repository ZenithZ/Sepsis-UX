/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Renderer, IterableDiffers, ElementRef, KeyValueDiffers, ChangeDetectorRef } from "@angular/core";
import { IgControlBase } from "../igcontrolbase/igcontrolbase";
export class IgRadialMenuComponent extends IgControlBase {
    /**
     * @param {?} el
     * @param {?} renderer
     * @param {?} differs
     * @param {?} kvalDiffers
     * @param {?} cdr
     */
    constructor(el, renderer, differs, kvalDiffers, cdr) {
        super(el, renderer, differs, kvalDiffers, cdr);
    }
    /* istanbul ignore next */
    /**
     * @param {?} itemKey
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    itemOption(itemKey, key, value) { return; }
    ;
    /* istanbul ignore next */
    /**
     * @return {?}
     */
    exportVisualData() { return; }
    ;
    /* istanbul ignore next */
    /**
     * @return {?}
     */
    flush() { return; }
    ;
    /* istanbul ignore next */
    /**
     * @return {?}
     */
    destroy() { return; }
    ;
    /* istanbul ignore next */
    /**
     * @return {?}
     */
    styleUpdated() { return; }
    ;
}
IgRadialMenuComponent.decorators = [
    { type: Component, args: [{
                selector: "ig-radial-menu",
                template: "<ng-content></ng-content>",
                inputs: ["widgetId", "options", "changeDetectionInterval", "disabled", "create", "items", "currentOpenMenuItemName", "centerButtonContentWidth", "centerButtonContentHeight", "centerButtonClosedFill", "centerButtonClosedStroke", "centerButtonFill", "centerButtonHotTrackFill", "centerButtonHotTrackStroke", "centerButtonStroke", "centerButtonStrokeThickness", "font", "isOpen", "menuBackground", "menuItemOpenCloseAnimationDuration", "menuItemOpenCloseAnimationEasingFunction", "menuOpenCloseAnimationDuration", "menuOpenCloseAnimationEasingFunction", "minWedgeCount", "outerRingFill", "outerRingThickness", "outerRingStroke", "outerRingStrokeThickness", "rotationInDegrees", "rotationAsPercentageOfWedge", "wedgePaddingInDegrees", "pixelScalingRatio"],
                outputs: ["formatLabel", "alignLabel", "valueChanged"]
            }] }
];
/** @nocollapse */
IgRadialMenuComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer },
    { type: IterableDiffers },
    { type: KeyValueDiffers },
    { type: ChangeDetectorRef }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWdyYWRpYWxtZW51LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2lnbml0ZXVpLWFuZ3VsYXItd3JhcHBlcnMvIiwic291cmNlcyI6WyJsaWIvaWdyYWRpYWxtZW51L2lncmFkaWFsbWVudS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLGVBQWUsRUFBRSxVQUFVLEVBQUUsZUFBZSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JILE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQVEvRCxNQUFNLE9BQU8scUJBQXNCLFNBQVEsYUFBMkI7Ozs7Ozs7O0lBQ2xFLFlBQVksRUFBYyxFQUFFLFFBQWtCLEVBQUUsT0FBd0IsRUFBRSxXQUE0QixFQUFFLEdBQXNCO1FBQzFILEtBQUssQ0FBQyxFQUFFLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxXQUFXLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDbkQsQ0FBQzs7Ozs7Ozs7SUFFTSxVQUFVLENBQUMsT0FBZSxFQUFFLEdBQVcsRUFBRSxLQUFhLElBQVUsT0FBTyxDQUFDLENBQUM7SUFBQSxDQUFDOzs7OztJQUUxRSxnQkFBZ0IsS0FBVyxPQUFPLENBQUMsQ0FBQztJQUFBLENBQUM7Ozs7O0lBRXJDLEtBQUssS0FBVyxPQUFPLENBQUMsQ0FBQztJQUFBLENBQUM7Ozs7O0lBRTFCLE9BQU8sS0FBVyxPQUFPLENBQUMsQ0FBQztJQUFBLENBQUM7Ozs7O0lBRTVCLFlBQVksS0FBVyxPQUFPLENBQUMsQ0FBQztJQUFBLENBQUM7OztZQW5CM0MsU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxnQkFBZ0I7Z0JBQzFCLFFBQVEsRUFBRSwyQkFBMkI7Z0JBQ3JDLE1BQU0sRUFBRSxDQUFDLFVBQVUsRUFBRSxTQUFTLEVBQUUseUJBQXlCLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsMEJBQTBCLEVBQUUsMkJBQTJCLEVBQUUsd0JBQXdCLEVBQUUsMEJBQTBCLEVBQUUsa0JBQWtCLEVBQUUsMEJBQTBCLEVBQUUsNEJBQTRCLEVBQUUsb0JBQW9CLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxnQkFBZ0IsRUFBRSxvQ0FBb0MsRUFBRSwwQ0FBMEMsRUFBRSxnQ0FBZ0MsRUFBRSxzQ0FBc0MsRUFBRSxlQUFlLEVBQUUsZUFBZSxFQUFFLG9CQUFvQixFQUFFLGlCQUFpQixFQUFFLDBCQUEwQixFQUFFLG1CQUFtQixFQUFFLDZCQUE2QixFQUFFLHVCQUF1QixFQUFFLG1CQUFtQixDQUFDO2dCQUMvdUIsT0FBTyxFQUFFLENBQUMsYUFBYSxFQUFFLFlBQVksRUFBRSxjQUFjLENBQUM7YUFDekQ7Ozs7WUFSOEMsVUFBVTtZQUFyQyxRQUFRO1lBQUUsZUFBZTtZQUFjLGVBQWU7WUFBRSxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIFJlbmRlcmVyLCBJdGVyYWJsZURpZmZlcnMsIEVsZW1lbnRSZWYsIEtleVZhbHVlRGlmZmVycywgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgSWdDb250cm9sQmFzZSB9IGZyb20gXCIuLi9pZ2NvbnRyb2xiYXNlL2lnY29udHJvbGJhc2VcIjtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6IFwiaWctcmFkaWFsLW1lbnVcIixcbiAgICB0ZW1wbGF0ZTogXCI8bmctY29udGVudD48L25nLWNvbnRlbnQ+XCIsXG4gICAgaW5wdXRzOiBbXCJ3aWRnZXRJZFwiLCBcIm9wdGlvbnNcIiwgXCJjaGFuZ2VEZXRlY3Rpb25JbnRlcnZhbFwiLCBcImRpc2FibGVkXCIsIFwiY3JlYXRlXCIsIFwiaXRlbXNcIiwgXCJjdXJyZW50T3Blbk1lbnVJdGVtTmFtZVwiLCBcImNlbnRlckJ1dHRvbkNvbnRlbnRXaWR0aFwiLCBcImNlbnRlckJ1dHRvbkNvbnRlbnRIZWlnaHRcIiwgXCJjZW50ZXJCdXR0b25DbG9zZWRGaWxsXCIsIFwiY2VudGVyQnV0dG9uQ2xvc2VkU3Ryb2tlXCIsIFwiY2VudGVyQnV0dG9uRmlsbFwiLCBcImNlbnRlckJ1dHRvbkhvdFRyYWNrRmlsbFwiLCBcImNlbnRlckJ1dHRvbkhvdFRyYWNrU3Ryb2tlXCIsIFwiY2VudGVyQnV0dG9uU3Ryb2tlXCIsIFwiY2VudGVyQnV0dG9uU3Ryb2tlVGhpY2tuZXNzXCIsIFwiZm9udFwiLCBcImlzT3BlblwiLCBcIm1lbnVCYWNrZ3JvdW5kXCIsIFwibWVudUl0ZW1PcGVuQ2xvc2VBbmltYXRpb25EdXJhdGlvblwiLCBcIm1lbnVJdGVtT3BlbkNsb3NlQW5pbWF0aW9uRWFzaW5nRnVuY3Rpb25cIiwgXCJtZW51T3BlbkNsb3NlQW5pbWF0aW9uRHVyYXRpb25cIiwgXCJtZW51T3BlbkNsb3NlQW5pbWF0aW9uRWFzaW5nRnVuY3Rpb25cIiwgXCJtaW5XZWRnZUNvdW50XCIsIFwib3V0ZXJSaW5nRmlsbFwiLCBcIm91dGVyUmluZ1RoaWNrbmVzc1wiLCBcIm91dGVyUmluZ1N0cm9rZVwiLCBcIm91dGVyUmluZ1N0cm9rZVRoaWNrbmVzc1wiLCBcInJvdGF0aW9uSW5EZWdyZWVzXCIsIFwicm90YXRpb25Bc1BlcmNlbnRhZ2VPZldlZGdlXCIsIFwid2VkZ2VQYWRkaW5nSW5EZWdyZWVzXCIsIFwicGl4ZWxTY2FsaW5nUmF0aW9cIl0sXG4gICAgb3V0cHV0czogW1wiZm9ybWF0TGFiZWxcIiwgXCJhbGlnbkxhYmVsXCIsIFwidmFsdWVDaGFuZ2VkXCJdXG59KVxuZXhwb3J0IGNsYXNzIElnUmFkaWFsTWVudUNvbXBvbmVudCBleHRlbmRzIElnQ29udHJvbEJhc2U8SWdSYWRpYWxNZW51PiB7XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIHJlbmRlcmVyOiBSZW5kZXJlciwgZGlmZmVyczogSXRlcmFibGVEaWZmZXJzLCBrdmFsRGlmZmVyczogS2V5VmFsdWVEaWZmZXJzLCBjZHI6IENoYW5nZURldGVjdG9yUmVmKSB7XG4gICAgICAgIHN1cGVyKGVsLCByZW5kZXJlciwgZGlmZmVycywga3ZhbERpZmZlcnMsIGNkcik7XG4gICAgfVxuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgcHVibGljIGl0ZW1PcHRpb24oaXRlbUtleTogT2JqZWN0LCBrZXk6IE9iamVjdCwgdmFsdWU6IE9iamVjdCk6IHZvaWQgeyByZXR1cm47IH07XG4gICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICBwdWJsaWMgZXhwb3J0VmlzdWFsRGF0YSgpOiB2b2lkIHsgcmV0dXJuOyB9O1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgcHVibGljIGZsdXNoKCk6IHZvaWQgeyByZXR1cm47IH07XG4gICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICBwdWJsaWMgZGVzdHJveSgpOiB2b2lkIHsgcmV0dXJuOyB9O1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgcHVibGljIHN0eWxlVXBkYXRlZCgpOiB2b2lkIHsgcmV0dXJuOyB9O1xufSJdfQ==