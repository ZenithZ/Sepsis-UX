/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Feature } from "../feature";
import { ElementRef, Directive } from "@angular/core";
export class IgGridTooltipsFeature extends Feature {
    /**
     * @param {?} el
     */
    constructor(el) {
        super(el);
    }
    /**
     * Destroys the tooltip widget.
     * @return {?}
     */
    /* istanbul ignore next */
    destroy() { return; }
    ;
    /**
     * Returns the ID of the parent div element bounding the ruler and the tooltip container
     * @return {?}
     */
    /* istanbul ignore next */
    id() { return; }
    ;
}
IgGridTooltipsFeature.decorators = [
    { type: Directive, args: [{
                selector: 'tooltips',
                inputs: ["disabled", "create", "visibility", "style", "showDelay", "hideDelay", "columnSettings", "fadeTimespan", "cursorLeftOffset", "cursorTopOffset", "inherit"],
                outputs: ["tooltipShowing", "tooltipShown", "tooltipHiding", "tooltipHidden"]
            },] }
];
/** @nocollapse */
IgGridTooltipsFeature.ctorParameters = () => [
    { type: ElementRef }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWdncmlkdG9vbHRpcHMuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vaWduaXRldWktYW5ndWxhci13cmFwcGVycy8iLCJzb3VyY2VzIjpbImxpYi9pZ2dyaWQvaWdncmlkZmVhdHVyZXMvaWdncmlkdG9vbHRpcHMuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3JDLE9BQU8sRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBT3RELE1BQU0sT0FBTyxxQkFBc0IsU0FBUSxPQUF1Qjs7OztJQUM5RCxZQUFZLEVBQWM7UUFDdEIsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ2QsQ0FBQzs7Ozs7O0lBTU0sT0FBTyxLQUFXLE9BQU8sQ0FBQyxDQUFDO0lBQUEsQ0FBQzs7Ozs7O0lBTTVCLEVBQUUsS0FBYSxPQUFPLENBQUMsQ0FBQztJQUFBLENBQUM7OztZQXBCbkMsU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxVQUFVO2dCQUNwQixNQUFNLEVBQUUsQ0FBQyxVQUFVLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxPQUFPLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBRSxnQkFBZ0IsRUFBRSxjQUFjLEVBQUUsa0JBQWtCLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxDQUFDO2dCQUNuSyxPQUFPLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxjQUFjLEVBQUUsZUFBZSxFQUFFLGVBQWUsQ0FBQzthQUNoRjs7OztZQU5RLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGZWF0dXJlIH0gZnJvbSBcIi4uL2ZlYXR1cmVcIjtcbmltcG9ydCB7IEVsZW1lbnRSZWYsIERpcmVjdGl2ZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAndG9vbHRpcHMnLFxuICAgIGlucHV0czogW1wiZGlzYWJsZWRcIiwgXCJjcmVhdGVcIiwgXCJ2aXNpYmlsaXR5XCIsIFwic3R5bGVcIiwgXCJzaG93RGVsYXlcIiwgXCJoaWRlRGVsYXlcIiwgXCJjb2x1bW5TZXR0aW5nc1wiLCBcImZhZGVUaW1lc3BhblwiLCBcImN1cnNvckxlZnRPZmZzZXRcIiwgXCJjdXJzb3JUb3BPZmZzZXRcIiwgXCJpbmhlcml0XCJdLFxuICAgIG91dHB1dHM6IFtcInRvb2x0aXBTaG93aW5nXCIsIFwidG9vbHRpcFNob3duXCIsIFwidG9vbHRpcEhpZGluZ1wiLCBcInRvb2x0aXBIaWRkZW5cIl1cbn0pXG5leHBvcnQgY2xhc3MgSWdHcmlkVG9vbHRpcHNGZWF0dXJlIGV4dGVuZHMgRmVhdHVyZTxJZ0dyaWRUb29sdGlwcz4ge1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmKSB7XG4gICAgICAgIHN1cGVyKGVsKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBEZXN0cm95cyB0aGUgdG9vbHRpcCB3aWRnZXQuXG4gICAgICovXG4gICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICBwdWJsaWMgZGVzdHJveSgpOiB2b2lkIHsgcmV0dXJuOyB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgSUQgb2YgdGhlIHBhcmVudCBkaXYgZWxlbWVudCBib3VuZGluZyB0aGUgcnVsZXIgYW5kIHRoZSB0b29sdGlwIGNvbnRhaW5lclxuICAgICAqL1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgcHVibGljIGlkKCk6IHN0cmluZyB7IHJldHVybjsgfTtcbn0iXX0=