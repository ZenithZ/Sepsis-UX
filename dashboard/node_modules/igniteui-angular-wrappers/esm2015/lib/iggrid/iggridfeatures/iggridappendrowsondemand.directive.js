/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Feature } from "../feature";
import { ElementRef, Directive } from "@angular/core";
export class IgGridAppendRowsOnDemandFeature extends Feature {
    /**
     * @param {?} el
     */
    constructor(el) {
        super(el);
    }
    /**
     * Destroys the append rows on demand widget
     * @return {?}
     */
    /* istanbul ignore next */
    destroy() { return; }
    ;
    /**
     * Loads the next chunk of data.
     * @return {?}
     */
    /* istanbul ignore next */
    nextChunk() { return; }
    ;
}
IgGridAppendRowsOnDemandFeature.decorators = [
    { type: Directive, args: [{
                selector: 'append-rows-on-demand',
                inputs: ["type", "chunkSize", "recordCountKey", "chunkSizeUrlKey", "chunkIndexUrlKey", "defaultChunkIndex", "currentChunkIndex", "loadTrigger", "loadMoreDataButtonText"],
                outputs: ["rowsRequesting", "rowsRequested"]
            },] }
];
/** @nocollapse */
IgGridAppendRowsOnDemandFeature.ctorParameters = () => [
    { type: ElementRef }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWdncmlkYXBwZW5kcm93c29uZGVtYW5kLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2lnbml0ZXVpLWFuZ3VsYXItd3JhcHBlcnMvIiwic291cmNlcyI6WyJsaWIvaWdncmlkL2lnZ3JpZGZlYXR1cmVzL2lnZ3JpZGFwcGVuZHJvd3NvbmRlbWFuZC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFPdEQsTUFBTSxPQUFPLCtCQUFnQyxTQUFRLE9BQWlDOzs7O0lBQ2xGLFlBQVksRUFBYztRQUN0QixLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDZCxDQUFDOzs7Ozs7SUFNTSxPQUFPLEtBQVcsT0FBTyxDQUFDLENBQUM7SUFBQSxDQUFDOzs7Ozs7SUFNNUIsU0FBUyxLQUFXLE9BQU8sQ0FBQyxDQUFDO0lBQUEsQ0FBQzs7O1lBcEJ4QyxTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLHVCQUF1QjtnQkFDakMsTUFBTSxFQUFFLENBQUMsTUFBTSxFQUFFLFdBQVcsRUFBRSxnQkFBZ0IsRUFBRSxpQkFBaUIsRUFBRSxrQkFBa0IsRUFBRSxtQkFBbUIsRUFBRSxtQkFBbUIsRUFBRSxhQUFhLEVBQUUsd0JBQXdCLENBQUM7Z0JBQ3pLLE9BQU8sRUFBRSxDQUFDLGdCQUFnQixFQUFFLGVBQWUsQ0FBQzthQUMvQzs7OztZQU5RLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGZWF0dXJlIH0gZnJvbSBcIi4uL2ZlYXR1cmVcIjtcbmltcG9ydCB7IEVsZW1lbnRSZWYsIERpcmVjdGl2ZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnYXBwZW5kLXJvd3Mtb24tZGVtYW5kJyxcbiAgICBpbnB1dHM6IFtcInR5cGVcIiwgXCJjaHVua1NpemVcIiwgXCJyZWNvcmRDb3VudEtleVwiLCBcImNodW5rU2l6ZVVybEtleVwiLCBcImNodW5rSW5kZXhVcmxLZXlcIiwgXCJkZWZhdWx0Q2h1bmtJbmRleFwiLCBcImN1cnJlbnRDaHVua0luZGV4XCIsIFwibG9hZFRyaWdnZXJcIiwgXCJsb2FkTW9yZURhdGFCdXR0b25UZXh0XCJdLFxuICAgIG91dHB1dHM6IFtcInJvd3NSZXF1ZXN0aW5nXCIsIFwicm93c1JlcXVlc3RlZFwiXVxufSlcbmV4cG9ydCBjbGFzcyBJZ0dyaWRBcHBlbmRSb3dzT25EZW1hbmRGZWF0dXJlIGV4dGVuZHMgRmVhdHVyZTxJZ0dyaWRBcHBlbmRSb3dzT25EZW1hbmQ+IHtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZikge1xuICAgICAgICBzdXBlcihlbCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRGVzdHJveXMgdGhlIGFwcGVuZCByb3dzIG9uIGRlbWFuZCB3aWRnZXRcbiAgICAgKi9cbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgIHB1YmxpYyBkZXN0cm95KCk6IHZvaWQgeyByZXR1cm47IH07XG5cbiAgICAvKipcbiAgICAgKiBMb2FkcyB0aGUgbmV4dCBjaHVuayBvZiBkYXRhLlxuICAgICAqL1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgcHVibGljIG5leHRDaHVuaygpOiB2b2lkIHsgcmV0dXJuOyB9O1xufSJdfQ==