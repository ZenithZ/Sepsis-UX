/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ElementRef, Renderer, IterableDiffers, Component, KeyValueDiffers, ChangeDetectorRef } from "@angular/core";
import { IgControlBase } from "../igcontrolbase/igcontrolbase";
export class IgSplitButtonComponent extends IgControlBase {
    /**
     * @param {?} el
     * @param {?} renderer
     * @param {?} differs
     * @param {?} kvalDiffers
     * @param {?} cdr
     */
    constructor(el, renderer, differs, kvalDiffers, cdr) { super(el, renderer, differs, kvalDiffers, cdr); }
    /**
     * Switch to given igToolbar button.
     *
     * @param {?} button . The button jQuery element.
     * @return {?}
     */
    /* istanbul ignore next */
    switchToButton(button) { return; }
    ;
    /**
     * Toggle widget state between collapsed and expanded.
     *
     * @param {?} e The igSplitButton to be expanded/collapsed.
     * @return {?}
     */
    /* istanbul ignore next */
    toggle(e) { return; }
    ;
    /**
     * Collapse the widget.
     *
     * @param {?=} e Indicates the browser event which triggered this action (not API).
     * @return {?}
     */
    /* istanbul ignore next */
    collapse(e) { return; }
    ;
    /**
     * Expands the widget.
     *
     * @param {?=} e Indicates the browser event which triggered this action (not API).
     * @return {?}
     */
    /* istanbul ignore next */
    expand(e) { return; }
    ;
    /**
     * Destroy the widget.
     * @return {?}
     */
    /* istanbul ignore next */
    destroy() { return; }
    ;
    /* istanbul ignore next */
    /**
     * @return {?}
     */
    widget() { return; }
    ;
}
IgSplitButtonComponent.decorators = [
    { type: Component, args: [{
                selector: "ig-split-button",
                template: "<ng-content></ng-content>",
                inputs: ["widgetId", "options", "changeDetectionInterval", "disabled", "create", "items", "defaultItemName", "swapDefaultEnabled"],
                outputs: ["click", "expanded", "expanding", "collapsed", "collapsing"]
            }] }
];
/** @nocollapse */
IgSplitButtonComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer },
    { type: IterableDiffers },
    { type: KeyValueDiffers },
    { type: ChangeDetectorRef }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWdzcGxpdGJ1dHRvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9pZ25pdGV1aS1hbmd1bGFyLXdyYXBwZXJzLyIsInNvdXJjZXMiOlsibGliL2lnc3BsaXRidXR0b24vaWdzcGxpdGJ1dHRvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLGVBQWUsRUFBRSxTQUFTLEVBQUUsZUFBZSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JILE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQVEvRCxNQUFNLE9BQU8sc0JBQXVCLFNBQVEsYUFBNEI7Ozs7Ozs7O0lBQ3BFLFlBQVksRUFBYyxFQUFFLFFBQWtCLEVBQUUsT0FBd0IsRUFBRSxXQUE0QixFQUFFLEdBQXNCLElBQUksS0FBSyxDQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLFdBQVcsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7Ozs7Ozs7O0lBUzVLLGNBQWMsQ0FBQyxNQUFjLElBQVUsT0FBTyxDQUFDLENBQUM7SUFBQSxDQUFDOzs7Ozs7OztJQVNqRCxNQUFNLENBQUMsQ0FBUyxJQUFZLE9BQU8sQ0FBQyxDQUFDO0lBQUEsQ0FBQzs7Ozs7Ozs7SUFTdEMsUUFBUSxDQUFDLENBQVUsSUFBWSxPQUFPLENBQUMsQ0FBQztJQUFBLENBQUM7Ozs7Ozs7O0lBU3pDLE1BQU0sQ0FBQyxDQUFVLElBQVksT0FBTyxDQUFDLENBQUM7SUFBQSxDQUFDOzs7Ozs7SUFNdkMsT0FBTyxLQUFXLE9BQU8sQ0FBQyxDQUFDO0lBQUEsQ0FBQzs7Ozs7SUFFNUIsTUFBTSxLQUFXLE9BQU8sQ0FBQyxDQUFDO0lBQUEsQ0FBQzs7O1lBbkRyQyxTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLGlCQUFpQjtnQkFDM0IsUUFBUSxFQUFFLDJCQUEyQjtnQkFDckMsTUFBTSxFQUFFLENBQUMsVUFBVSxFQUFFLFNBQVMsRUFBRSx5QkFBeUIsRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxvQkFBb0IsQ0FBQztnQkFDbEksT0FBTyxFQUFFLENBQUMsT0FBTyxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUFFLFlBQVksQ0FBQzthQUN6RTs7OztZQVJRLFVBQVU7WUFBRSxRQUFRO1lBQUUsZUFBZTtZQUFhLGVBQWU7WUFBRSxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBSZW5kZXJlciwgSXRlcmFibGVEaWZmZXJzLCBDb21wb25lbnQsIEtleVZhbHVlRGlmZmVycywgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgSWdDb250cm9sQmFzZSB9IGZyb20gXCIuLi9pZ2NvbnRyb2xiYXNlL2lnY29udHJvbGJhc2VcIjtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6IFwiaWctc3BsaXQtYnV0dG9uXCIsXG4gICAgdGVtcGxhdGU6IFwiPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlwiLFxuICAgIGlucHV0czogW1wid2lkZ2V0SWRcIiwgXCJvcHRpb25zXCIsIFwiY2hhbmdlRGV0ZWN0aW9uSW50ZXJ2YWxcIiwgXCJkaXNhYmxlZFwiLCBcImNyZWF0ZVwiLCBcIml0ZW1zXCIsIFwiZGVmYXVsdEl0ZW1OYW1lXCIsIFwic3dhcERlZmF1bHRFbmFibGVkXCJdLFxuICAgIG91dHB1dHM6IFtcImNsaWNrXCIsIFwiZXhwYW5kZWRcIiwgXCJleHBhbmRpbmdcIiwgXCJjb2xsYXBzZWRcIiwgXCJjb2xsYXBzaW5nXCJdXG59KVxuZXhwb3J0IGNsYXNzIElnU3BsaXRCdXR0b25Db21wb25lbnQgZXh0ZW5kcyBJZ0NvbnRyb2xCYXNlPElnU3BsaXRCdXR0b24+IHtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyLCBkaWZmZXJzOiBJdGVyYWJsZURpZmZlcnMsIGt2YWxEaWZmZXJzOiBLZXlWYWx1ZURpZmZlcnMsIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHsgc3VwZXIoZWwsIHJlbmRlcmVyLCBkaWZmZXJzLCBrdmFsRGlmZmVycywgY2RyKTsgfVxuXG5cbiAgICAvKipcbiAgICAgKiBTd2l0Y2ggdG8gZ2l2ZW4gaWdUb29sYmFyIGJ1dHRvbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBidXR0b24gLiBUaGUgYnV0dG9uIGpRdWVyeSBlbGVtZW50LlxuICAgICAqL1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgcHVibGljIHN3aXRjaFRvQnV0dG9uKGJ1dHRvbjogT2JqZWN0KTogdm9pZCB7IHJldHVybjsgfTtcblxuXG4gICAgLyoqXG4gICAgICogVG9nZ2xlIHdpZGdldCBzdGF0ZSBiZXR3ZWVuIGNvbGxhcHNlZCBhbmQgZXhwYW5kZWQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZSBUaGUgaWdTcGxpdEJ1dHRvbiB0byBiZSBleHBhbmRlZC9jb2xsYXBzZWQuXG4gICAgICovXG4gICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICBwdWJsaWMgdG9nZ2xlKGU6IE9iamVjdCk6IE9iamVjdCB7IHJldHVybjsgfTtcblxuXG4gICAgLyoqXG4gICAgICogQ29sbGFwc2UgdGhlIHdpZGdldC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBlIEluZGljYXRlcyB0aGUgYnJvd3NlciBldmVudCB3aGljaCB0cmlnZ2VyZWQgdGhpcyBhY3Rpb24gKG5vdCBBUEkpLlxuICAgICAqL1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgcHVibGljIGNvbGxhcHNlKGU/OiBPYmplY3QpOiBPYmplY3QgeyByZXR1cm47IH07XG5cblxuICAgIC8qKlxuICAgICAqIEV4cGFuZHMgdGhlIHdpZGdldC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBlIEluZGljYXRlcyB0aGUgYnJvd3NlciBldmVudCB3aGljaCB0cmlnZ2VyZWQgdGhpcyBhY3Rpb24gKG5vdCBBUEkpLlxuICAgICAqL1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgcHVibGljIGV4cGFuZChlPzogT2JqZWN0KTogT2JqZWN0IHsgcmV0dXJuOyB9O1xuXG4gICAgLyoqXG4gICAgICogRGVzdHJveSB0aGUgd2lkZ2V0LlxuICAgICAqL1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgcHVibGljIGRlc3Ryb3koKTogdm9pZCB7IHJldHVybjsgfTtcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgIHB1YmxpYyB3aWRnZXQoKTogdm9pZCB7IHJldHVybjsgfTtcbn0iXX0=