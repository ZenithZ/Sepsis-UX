/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Feature } from "../feature";
import { ElementRef, Directive } from "@angular/core";
var IgGridTooltipsFeature = /** @class */ (function (_super) {
    tslib_1.__extends(IgGridTooltipsFeature, _super);
    function IgGridTooltipsFeature(el) {
        return _super.call(this, el) || this;
    }
    /**
     * Destroys the tooltip widget.
     */
    /* istanbul ignore next */
    /**
     * Destroys the tooltip widget.
     * @return {?}
     */
    /* istanbul ignore next */
    IgGridTooltipsFeature.prototype.destroy = /**
     * Destroys the tooltip widget.
     * @return {?}
     */
    /* istanbul ignore next */
    function () { return; };
    ;
    /**
     * Returns the ID of the parent div element bounding the ruler and the tooltip container
     */
    /* istanbul ignore next */
    /**
     * Returns the ID of the parent div element bounding the ruler and the tooltip container
     * @return {?}
     */
    /* istanbul ignore next */
    IgGridTooltipsFeature.prototype.id = /**
     * Returns the ID of the parent div element bounding the ruler and the tooltip container
     * @return {?}
     */
    /* istanbul ignore next */
    function () { return; };
    ;
    IgGridTooltipsFeature.decorators = [
        { type: Directive, args: [{
                    selector: 'tooltips',
                    inputs: ["disabled", "create", "visibility", "style", "showDelay", "hideDelay", "columnSettings", "fadeTimespan", "cursorLeftOffset", "cursorTopOffset", "inherit"],
                    outputs: ["tooltipShowing", "tooltipShown", "tooltipHiding", "tooltipHidden"]
                },] }
    ];
    /** @nocollapse */
    IgGridTooltipsFeature.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    return IgGridTooltipsFeature;
}(Feature));
export { IgGridTooltipsFeature };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWdncmlkdG9vbHRpcHMuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vaWduaXRldWktYW5ndWxhci13cmFwcGVycy8iLCJzb3VyY2VzIjpbImxpYi9pZ2dyaWQvaWdncmlkZmVhdHVyZXMvaWdncmlkdG9vbHRpcHMuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNyQyxPQUFPLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV0RDtJQUsyQyxpREFBdUI7SUFDOUQsK0JBQVksRUFBYztlQUN0QixrQkFBTSxFQUFFLENBQUM7SUFDYixDQUFDO0lBRUQ7O09BRUc7SUFDSCwwQkFBMEI7Ozs7OztJQUNuQix1Q0FBTzs7Ozs7SUFBZCxjQUF5QixPQUFPLENBQUMsQ0FBQztJQUFBLENBQUM7SUFFbkM7O09BRUc7SUFDSCwwQkFBMEI7Ozs7OztJQUNuQixrQ0FBRTs7Ozs7SUFBVCxjQUFzQixPQUFPLENBQUMsQ0FBQztJQUFBLENBQUM7O2dCQXBCbkMsU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxVQUFVO29CQUNwQixNQUFNLEVBQUUsQ0FBQyxVQUFVLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxPQUFPLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBRSxnQkFBZ0IsRUFBRSxjQUFjLEVBQUUsa0JBQWtCLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxDQUFDO29CQUNuSyxPQUFPLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxjQUFjLEVBQUUsZUFBZSxFQUFFLGVBQWUsQ0FBQztpQkFDaEY7Ozs7Z0JBTlEsVUFBVTs7SUF1Qm5CLDRCQUFDO0NBQUEsQUFyQkQsQ0FLMkMsT0FBTyxHQWdCakQ7U0FoQlkscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRmVhdHVyZSB9IGZyb20gXCIuLi9mZWF0dXJlXCI7XG5pbXBvcnQgeyBFbGVtZW50UmVmLCBEaXJlY3RpdmUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ3Rvb2x0aXBzJyxcbiAgICBpbnB1dHM6IFtcImRpc2FibGVkXCIsIFwiY3JlYXRlXCIsIFwidmlzaWJpbGl0eVwiLCBcInN0eWxlXCIsIFwic2hvd0RlbGF5XCIsIFwiaGlkZURlbGF5XCIsIFwiY29sdW1uU2V0dGluZ3NcIiwgXCJmYWRlVGltZXNwYW5cIiwgXCJjdXJzb3JMZWZ0T2Zmc2V0XCIsIFwiY3Vyc29yVG9wT2Zmc2V0XCIsIFwiaW5oZXJpdFwiXSxcbiAgICBvdXRwdXRzOiBbXCJ0b29sdGlwU2hvd2luZ1wiLCBcInRvb2x0aXBTaG93blwiLCBcInRvb2x0aXBIaWRpbmdcIiwgXCJ0b29sdGlwSGlkZGVuXCJdXG59KVxuZXhwb3J0IGNsYXNzIElnR3JpZFRvb2x0aXBzRmVhdHVyZSBleHRlbmRzIEZlYXR1cmU8SWdHcmlkVG9vbHRpcHM+IHtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZikge1xuICAgICAgICBzdXBlcihlbCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRGVzdHJveXMgdGhlIHRvb2x0aXAgd2lkZ2V0LlxuICAgICAqL1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgcHVibGljIGRlc3Ryb3koKTogdm9pZCB7IHJldHVybjsgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIElEIG9mIHRoZSBwYXJlbnQgZGl2IGVsZW1lbnQgYm91bmRpbmcgdGhlIHJ1bGVyIGFuZCB0aGUgdG9vbHRpcCBjb250YWluZXJcbiAgICAgKi9cbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgIHB1YmxpYyBpZCgpOiBzdHJpbmcgeyByZXR1cm47IH07XG59Il19