/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Feature } from "../feature";
import { ElementRef, Directive } from "@angular/core";
var IgGridResponsiveFeature = /** @class */ (function (_super) {
    tslib_1.__extends(IgGridResponsiveFeature, _super);
    function IgGridResponsiveFeature(el) {
        return _super.call(this, el) || this;
    }
    /**
     * Destroys the responsive widget.
     */
    /* istanbul ignore next */
    /**
     * Destroys the responsive widget.
     * @return {?}
     */
    /* istanbul ignore next */
    IgGridResponsiveFeature.prototype.destroy = /**
     * Destroys the responsive widget.
     * @return {?}
     */
    /* istanbul ignore next */
    function () { return; };
    ;
    /**
     * Returns the currently active responsive mode.
     */
    /* istanbul ignore next */
    /**
     * Returns the currently active responsive mode.
     * @return {?}
     */
    /* istanbul ignore next */
    IgGridResponsiveFeature.prototype.getCurrentResponsiveMode = /**
     * Returns the currently active responsive mode.
     * @return {?}
     */
    /* istanbul ignore next */
    function () { return; };
    ;
    IgGridResponsiveFeature.decorators = [
        { type: Directive, args: [{
                    selector: 'responsive',
                    inputs: ["disabled", "create", "columnSettings", "reactOnContainerWidthChanges", "forceResponsiveGridWidth", "responsiveSensitivity", "responsiveModes", "enableVerticalRendering", "windowWidthToRenderVertically", "propertiesColumnWidth", "valuesColumnWidth", "allowedColumnWidthPerType", "singleColumnTemplate", "inherit"],
                    outputs: ["responsiveColumnHiding", "responsiveColumnHidden", "responsiveColumnShowing", "responsiveColumnShown", "responsiveModeChanged"]
                },] }
    ];
    /** @nocollapse */
    IgGridResponsiveFeature.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    return IgGridResponsiveFeature;
}(Feature));
export { IgGridResponsiveFeature };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWdncmlkcmVzcG9uc2l2ZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9pZ25pdGV1aS1hbmd1bGFyLXdyYXBwZXJzLyIsInNvdXJjZXMiOlsibGliL2lnZ3JpZC9pZ2dyaWRmZWF0dXJlcy9pZ2dyaWRyZXNwb25zaXZlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDckMsT0FBTyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdEQ7SUFLNkMsbURBQXlCO0lBQ2xFLGlDQUFZLEVBQWM7ZUFDdEIsa0JBQU0sRUFBRSxDQUFDO0lBQ2IsQ0FBQztJQUVEOztPQUVHO0lBQ0gsMEJBQTBCOzs7Ozs7SUFDbkIseUNBQU87Ozs7O0lBQWQsY0FBeUIsT0FBTyxDQUFDLENBQUM7SUFBQSxDQUFDO0lBRW5DOztPQUVHO0lBQ0gsMEJBQTBCOzs7Ozs7SUFDbkIsMERBQXdCOzs7OztJQUEvQixjQUEwQyxPQUFPLENBQUMsQ0FBQztJQUFBLENBQUM7O2dCQXBCdkQsU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxZQUFZO29CQUN0QixNQUFNLEVBQUUsQ0FBQyxVQUFVLEVBQUUsUUFBUSxFQUFFLGdCQUFnQixFQUFFLDhCQUE4QixFQUFFLDBCQUEwQixFQUFFLHVCQUF1QixFQUFFLGlCQUFpQixFQUFFLHlCQUF5QixFQUFFLCtCQUErQixFQUFFLHVCQUF1QixFQUFFLG1CQUFtQixFQUFFLDJCQUEyQixFQUFFLHNCQUFzQixFQUFFLFNBQVMsQ0FBQztvQkFDbFUsT0FBTyxFQUFFLENBQUMsd0JBQXdCLEVBQUUsd0JBQXdCLEVBQUUseUJBQXlCLEVBQUUsdUJBQXVCLEVBQUUsdUJBQXVCLENBQUM7aUJBQzdJOzs7O2dCQU5RLFVBQVU7O0lBdUJuQiw4QkFBQztDQUFBLEFBckJELENBSzZDLE9BQU8sR0FnQm5EO1NBaEJZLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZlYXR1cmUgfSBmcm9tIFwiLi4vZmVhdHVyZVwiO1xuaW1wb3J0IHsgRWxlbWVudFJlZiwgRGlyZWN0aXZlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdyZXNwb25zaXZlJyxcbiAgICBpbnB1dHM6IFtcImRpc2FibGVkXCIsIFwiY3JlYXRlXCIsIFwiY29sdW1uU2V0dGluZ3NcIiwgXCJyZWFjdE9uQ29udGFpbmVyV2lkdGhDaGFuZ2VzXCIsIFwiZm9yY2VSZXNwb25zaXZlR3JpZFdpZHRoXCIsIFwicmVzcG9uc2l2ZVNlbnNpdGl2aXR5XCIsIFwicmVzcG9uc2l2ZU1vZGVzXCIsIFwiZW5hYmxlVmVydGljYWxSZW5kZXJpbmdcIiwgXCJ3aW5kb3dXaWR0aFRvUmVuZGVyVmVydGljYWxseVwiLCBcInByb3BlcnRpZXNDb2x1bW5XaWR0aFwiLCBcInZhbHVlc0NvbHVtbldpZHRoXCIsIFwiYWxsb3dlZENvbHVtbldpZHRoUGVyVHlwZVwiLCBcInNpbmdsZUNvbHVtblRlbXBsYXRlXCIsIFwiaW5oZXJpdFwiXSxcbiAgICBvdXRwdXRzOiBbXCJyZXNwb25zaXZlQ29sdW1uSGlkaW5nXCIsIFwicmVzcG9uc2l2ZUNvbHVtbkhpZGRlblwiLCBcInJlc3BvbnNpdmVDb2x1bW5TaG93aW5nXCIsIFwicmVzcG9uc2l2ZUNvbHVtblNob3duXCIsIFwicmVzcG9uc2l2ZU1vZGVDaGFuZ2VkXCJdXG59KVxuZXhwb3J0IGNsYXNzIElnR3JpZFJlc3BvbnNpdmVGZWF0dXJlIGV4dGVuZHMgRmVhdHVyZTxJZ0dyaWRSZXNwb25zaXZlPiB7XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYpIHtcbiAgICAgICAgc3VwZXIoZWwpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIERlc3Ryb3lzIHRoZSByZXNwb25zaXZlIHdpZGdldC5cbiAgICAgKi9cbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgIHB1YmxpYyBkZXN0cm95KCk6IHZvaWQgeyByZXR1cm47IH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBjdXJyZW50bHkgYWN0aXZlIHJlc3BvbnNpdmUgbW9kZS5cbiAgICAgKi9cbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgIHB1YmxpYyBnZXRDdXJyZW50UmVzcG9uc2l2ZU1vZGUoKTogdm9pZCB7IHJldHVybjsgfTtcbn0iXX0=