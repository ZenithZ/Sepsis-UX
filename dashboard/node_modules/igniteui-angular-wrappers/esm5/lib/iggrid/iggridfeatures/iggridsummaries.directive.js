/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ElementRef, Directive } from "@angular/core";
import { Feature } from "../feature";
var IgGridSummariesFeature = /** @class */ (function (_super) {
    tslib_1.__extends(IgGridSummariesFeature, _super);
    function IgGridSummariesFeature(el) {
        return _super.call(this, el) || this;
    }
    /* istanbul ignore next */
    /* istanbul ignore next */
    /**
     * @return {?}
     */
    IgGridSummariesFeature.prototype.destroy = /* istanbul ignore next */
    /**
     * @return {?}
     */
    function () { return; };
    ;
    /**
     * Returns whether summaries rows are hidden
     */
    /* istanbul ignore next */
    /**
     * Returns whether summaries rows are hidden
     * @return {?}
     */
    /* istanbul ignore next */
    IgGridSummariesFeature.prototype.isSummariesRowsHidden = /**
     * Returns whether summaries rows are hidden
     * @return {?}
     */
    /* istanbul ignore next */
    function () { return; };
    ;
    /**
     * Calculate summaries
     */
    /* istanbul ignore next */
    /**
     * Calculate summaries
     * @return {?}
     */
    /* istanbul ignore next */
    IgGridSummariesFeature.prototype.calculateSummaries = /**
     * Calculate summaries
     * @return {?}
     */
    /* istanbul ignore next */
    function () { return; };
    ;
    /**
     * Remove all summaries dropdown buttons.
     */
    /* istanbul ignore next */
    /**
     * Remove all summaries dropdown buttons.
     * @return {?}
     */
    /* istanbul ignore next */
    IgGridSummariesFeature.prototype.clearAllFooterIcons = /**
     * Remove all summaries dropdown buttons.
     * @return {?}
     */
    /* istanbul ignore next */
    function () { return; };
    ;
    /**
     * Toggle drop down
     *
     * @param columnKey    toggle drop down for the column with the specified key
     * @param event    event object. Its data should contain current columnKey, isAnimating, buttonId
     */
    /* istanbul ignore next */
    /**
     * Toggle drop down
     *
     * @param {?} columnKey    toggle drop down for the column with the specified key
     * @param {?} event    event object. Its data should contain current columnKey, isAnimating, buttonId
     * @return {?}
     */
    /* istanbul ignore next */
    IgGridSummariesFeature.prototype.toggleDropDown = /**
     * Toggle drop down
     *
     * @param {?} columnKey    toggle drop down for the column with the specified key
     * @param {?} event    event object. Its data should contain current columnKey, isAnimating, buttonId
     * @return {?}
     */
    /* istanbul ignore next */
    function (columnKey, event) { return; };
    ;
    /**
     * Show/Hide dialog
     *
     * @param $dialog     jQuery object representation of dropdown div element
     */
    /* istanbul ignore next */
    /**
     * Show/Hide dialog
     *
     * @param {?} $dialog     jQuery object representation of dropdown div element
     * @return {?}
     */
    /* istanbul ignore next */
    IgGridSummariesFeature.prototype.showHideDialog = /**
     * Show/Hide dialog
     *
     * @param {?} $dialog     jQuery object representation of dropdown div element
     * @return {?}
     */
    /* istanbul ignore next */
    function ($dialog) { return; };
    ;
    /**
     * Toggle summaries rows
     *
     * @param isToShow    Specifies whether to show or not summaries
     * @param isInternalCall    Optional parameter.Specifies whether this function is called internally by the widget.
     */
    /* istanbul ignore next */
    /**
     * Toggle summaries rows
     *
     * @param {?} isToShow    Specifies whether to show or not summaries
     * @param {?} isInternalCall    Optional parameter.Specifies whether this function is called internally by the widget.
     * @return {?}
     */
    /* istanbul ignore next */
    IgGridSummariesFeature.prototype.toggleSummariesRows = /**
     * Toggle summaries rows
     *
     * @param {?} isToShow    Specifies whether to show or not summaries
     * @param {?} isInternalCall    Optional parameter.Specifies whether this function is called internally by the widget.
     * @return {?}
     */
    /* istanbul ignore next */
    function (isToShow, isInternalCall) { return; };
    ;
    /**
     * Toggles the checkstate of a checkbox if checkboxMode is not set to off, otherwise does nothing.
     *
     * @param $checkbox     Specifies the jQuery object of the checkbox.
     */
    /* istanbul ignore next */
    /**
     * Toggles the checkstate of a checkbox if checkboxMode is not set to off, otherwise does nothing.
     *
     * @param {?} $checkbox     Specifies the jQuery object of the checkbox.
     * @return {?}
     */
    /* istanbul ignore next */
    IgGridSummariesFeature.prototype.toggleCheckstate = /**
     * Toggles the checkstate of a checkbox if checkboxMode is not set to off, otherwise does nothing.
     *
     * @param {?} $checkbox     Specifies the jQuery object of the checkbox.
     * @return {?}
     */
    /* istanbul ignore next */
    function ($checkbox) { return; };
    ;
    /**
     * Select/Unselect specified checkbox
     *
     * @param $checkbox     Specifies the jQuery object for checkbox
     * @param isToSelect     Specify whether to select or not checkbox
     */
    /* istanbul ignore next */
    /**
     * Select/Unselect specified checkbox
     *
     * @param {?} $checkbox     Specifies the jQuery object for checkbox
     * @param {?} isToSelect     Specify whether to select or not checkbox
     * @return {?}
     */
    /* istanbul ignore next */
    IgGridSummariesFeature.prototype.selectCheckBox = /**
     * Select/Unselect specified checkbox
     *
     * @param {?} $checkbox     Specifies the jQuery object for checkbox
     * @param {?} isToSelect     Specify whether to select or not checkbox
     * @return {?}
     */
    /* istanbul ignore next */
    function ($checkbox, isToSelect) { return; };
    ;
    /**
     * Summary calculate the whole data for the specified column key, columnMethods and dataType (used when datasource is remote and dataType is date)
     *
     * @param ck    ColumnKey
     * @param columnMethods    Array of column methods objects
     * @param data    Object which represents result
 represents dataType for the current column
    * @param dataType
    */
    /* istanbul ignore next */
    /**
     * Summary calculate the whole data for the specified column key, columnMethods and dataType (used when datasource is remote and dataType is date)
     *
     * @param {?} ck    ColumnKey
     * @param {?} columnMethods    Array of column methods objects
     * @param {?} data    Object which represents result
     * represents dataType for the current column
     * @param {?} dataType
     * @return {?}
     */
    /* istanbul ignore next */
    IgGridSummariesFeature.prototype.calculateSummaryColumn = /**
     * Summary calculate the whole data for the specified column key, columnMethods and dataType (used when datasource is remote and dataType is date)
     *
     * @param {?} ck    ColumnKey
     * @param {?} columnMethods    Array of column methods objects
     * @param {?} data    Object which represents result
     * represents dataType for the current column
     * @param {?} dataType
     * @return {?}
     */
    /* istanbul ignore next */
    function (ck, columnMethods, data, dataType) { return; };
    ;
    /**
     * Return a JQUERY object which holds all summaries for all columns
     */
    /* istanbul ignore next */
    /**
     * Return a JQUERY object which holds all summaries for all columns
     * @return {?}
     */
    /* istanbul ignore next */
    IgGridSummariesFeature.prototype.summaryCollection = /**
     * Return a JQUERY object which holds all summaries for all columns
     * @return {?}
     */
    /* istanbul ignore next */
    function () { return; };
    ;
    /**
     * Return a JQUERY object which holds all summaries for column with the specified column key
     *
     * @param columnKey
     */
    /* istanbul ignore next */
    /**
     * Return a JQUERY object which holds all summaries for column with the specified column key
     *
     * @param {?} columnKey
     * @return {?}
     */
    /* istanbul ignore next */
    IgGridSummariesFeature.prototype.summariesFor = /**
     * Return a JQUERY object which holds all summaries for column with the specified column key
     *
     * @param {?} columnKey
     * @return {?}
     */
    /* istanbul ignore next */
    function (columnKey) { return; };
    ;
    IgGridSummariesFeature.decorators = [
        { type: Directive, args: [{
                    selector: 'summaries',
                    inputs: ["disabled", "create", "type", "dialogButtonOKText", "dialogButtonCancelText", "calculateRenderMode", "featureChooserText", "featureChooserTextHide", "compactRenderingMode", "defaultDecimalDisplay", "showSummariesButton", "summariesResponseKey", "summaryExprUrlKey", "callee", "dropDownHeight", "dropDownWidth", "showDropDownButton", "summaryExecution", "dropDownDialogAnimationDuration", "emptyCellText", "summariesHeaderButtonTooltip", "resultTemplate", "isGridFormatter", "renderSummaryCellFunc", "columnSettings", "inherit"],
                    outputs: ["dropDownOpening", "dropDownOpened", "dropDownClosing", "dropDownClosed", "summariesCalculating", "summariesCalculated", "summariesMethodSelectionChanged", "summariesToggling", "summariesToggled", "dropDownOKClicked", "dropDownCancelClicked"]
                },] }
    ];
    /** @nocollapse */
    IgGridSummariesFeature.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    return IgGridSummariesFeature;
}(Feature));
export { IgGridSummariesFeature };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWdncmlkc3VtbWFyaWVzLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2lnbml0ZXVpLWFuZ3VsYXItd3JhcHBlcnMvIiwic291cmNlcyI6WyJsaWIvaWdncmlkL2lnZ3JpZGZlYXR1cmVzL2lnZ3JpZHN1bW1hcmllcy5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN0RCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBR3JDO0lBSzRDLGtEQUF3QjtJQUNoRSxnQ0FBWSxFQUFjO2VBQ3RCLGtCQUFNLEVBQUUsQ0FBQztJQUNiLENBQUM7SUFDRCwwQkFBMEI7Ozs7O0lBQ25CLHdDQUFPOzs7O0lBQWQsY0FBeUIsT0FBTyxDQUFDLENBQUM7SUFBQSxDQUFDO0lBRW5DOztPQUVHO0lBQ0gsMEJBQTBCOzs7Ozs7SUFDbkIsc0RBQXFCOzs7OztJQUE1QixjQUF1QyxPQUFPLENBQUMsQ0FBQztJQUFBLENBQUM7SUFFakQ7O09BRUc7SUFDSCwwQkFBMEI7Ozs7OztJQUNuQixtREFBa0I7Ozs7O0lBQXpCLGNBQW9DLE9BQU8sQ0FBQyxDQUFDO0lBQUEsQ0FBQztJQUU5Qzs7T0FFRztJQUNILDBCQUEwQjs7Ozs7O0lBQ25CLG9EQUFtQjs7Ozs7SUFBMUIsY0FBcUMsT0FBTyxDQUFDLENBQUM7SUFBQSxDQUFDO0lBRS9DOzs7OztPQUtHO0lBQ0gsMEJBQTBCOzs7Ozs7Ozs7SUFDbkIsK0NBQWM7Ozs7Ozs7O0lBQXJCLFVBQXNCLFNBQWlCLEVBQUUsS0FBYSxJQUFVLE9BQU8sQ0FBQyxDQUFDO0lBQUEsQ0FBQztJQUUxRTs7OztPQUlHO0lBQ0gsMEJBQTBCOzs7Ozs7OztJQUNuQiwrQ0FBYzs7Ozs7OztJQUFyQixVQUFzQixPQUFlLElBQVUsT0FBTyxDQUFDLENBQUM7SUFBQSxDQUFDO0lBRXpEOzs7OztPQUtHO0lBQ0gsMEJBQTBCOzs7Ozs7Ozs7SUFDbkIsb0RBQW1COzs7Ozs7OztJQUExQixVQUEyQixRQUFpQixFQUFFLGNBQXVCLElBQVUsT0FBTyxDQUFDLENBQUM7SUFBQSxDQUFDO0lBRXpGOzs7O09BSUc7SUFDSCwwQkFBMEI7Ozs7Ozs7O0lBQ25CLGlEQUFnQjs7Ozs7OztJQUF2QixVQUF3QixTQUFpQixJQUFVLE9BQU8sQ0FBQyxDQUFDO0lBQUEsQ0FBQztJQUU3RDs7Ozs7T0FLRztJQUNILDBCQUEwQjs7Ozs7Ozs7O0lBQ25CLCtDQUFjOzs7Ozs7OztJQUFyQixVQUFzQixTQUFpQixFQUFFLFVBQW1CLElBQVUsT0FBTyxDQUFDLENBQUM7SUFBQSxDQUFDO0lBRWhGOzs7Ozs7OztNQVFFO0lBQ0YsMEJBQTBCOzs7Ozs7Ozs7Ozs7SUFDbkIsdURBQXNCOzs7Ozs7Ozs7OztJQUE3QixVQUE4QixFQUFVLEVBQUUsYUFBb0IsRUFBRSxJQUFZLEVBQUUsUUFBZ0IsSUFBVSxPQUFPLENBQUMsQ0FBQztJQUFBLENBQUM7SUFFbEg7O09BRUc7SUFDSCwwQkFBMEI7Ozs7OztJQUNuQixrREFBaUI7Ozs7O0lBQXhCLGNBQW1DLE9BQU8sQ0FBQyxDQUFDO0lBQUEsQ0FBQztJQUU3Qzs7OztPQUlHO0lBQ0gsMEJBQTBCOzs7Ozs7OztJQUNuQiw2Q0FBWTs7Ozs7OztJQUFuQixVQUFvQixTQUFpQixJQUFVLE9BQU8sQ0FBQyxDQUFDO0lBQUEsQ0FBQzs7Z0JBakc1RCxTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLFdBQVc7b0JBQ3JCLE1BQU0sRUFBRSxDQUFDLFVBQVUsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLG9CQUFvQixFQUFFLHdCQUF3QixFQUFFLHFCQUFxQixFQUFFLG9CQUFvQixFQUFFLHdCQUF3QixFQUFFLHNCQUFzQixFQUFFLHVCQUF1QixFQUFFLHFCQUFxQixFQUFFLHNCQUFzQixFQUFFLG1CQUFtQixFQUFFLFFBQVEsRUFBRSxnQkFBZ0IsRUFBRSxlQUFlLEVBQUUsb0JBQW9CLEVBQUUsa0JBQWtCLEVBQUUsaUNBQWlDLEVBQUUsZUFBZSxFQUFFLDhCQUE4QixFQUFFLGdCQUFnQixFQUFFLGlCQUFpQixFQUFFLHVCQUF1QixFQUFFLGdCQUFnQixFQUFFLFNBQVMsQ0FBQztvQkFDeGhCLE9BQU8sRUFBRSxDQUFDLGlCQUFpQixFQUFFLGdCQUFnQixFQUFFLGlCQUFpQixFQUFFLGdCQUFnQixFQUFFLHNCQUFzQixFQUFFLHFCQUFxQixFQUFFLGlDQUFpQyxFQUFFLG1CQUFtQixFQUFFLGtCQUFrQixFQUFFLG1CQUFtQixFQUFFLHVCQUF1QixDQUFDO2lCQUMvUDs7OztnQkFSUSxVQUFVOztJQXNHbkIsNkJBQUM7Q0FBQSxBQWxHRCxDQUs0QyxPQUFPLEdBNkZsRDtTQTdGWSxzQkFBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBEaXJlY3RpdmUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgRmVhdHVyZSB9IGZyb20gXCIuLi9mZWF0dXJlXCI7XG5cblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdzdW1tYXJpZXMnLFxuICAgIGlucHV0czogW1wiZGlzYWJsZWRcIiwgXCJjcmVhdGVcIiwgXCJ0eXBlXCIsIFwiZGlhbG9nQnV0dG9uT0tUZXh0XCIsIFwiZGlhbG9nQnV0dG9uQ2FuY2VsVGV4dFwiLCBcImNhbGN1bGF0ZVJlbmRlck1vZGVcIiwgXCJmZWF0dXJlQ2hvb3NlclRleHRcIiwgXCJmZWF0dXJlQ2hvb3NlclRleHRIaWRlXCIsIFwiY29tcGFjdFJlbmRlcmluZ01vZGVcIiwgXCJkZWZhdWx0RGVjaW1hbERpc3BsYXlcIiwgXCJzaG93U3VtbWFyaWVzQnV0dG9uXCIsIFwic3VtbWFyaWVzUmVzcG9uc2VLZXlcIiwgXCJzdW1tYXJ5RXhwclVybEtleVwiLCBcImNhbGxlZVwiLCBcImRyb3BEb3duSGVpZ2h0XCIsIFwiZHJvcERvd25XaWR0aFwiLCBcInNob3dEcm9wRG93bkJ1dHRvblwiLCBcInN1bW1hcnlFeGVjdXRpb25cIiwgXCJkcm9wRG93bkRpYWxvZ0FuaW1hdGlvbkR1cmF0aW9uXCIsIFwiZW1wdHlDZWxsVGV4dFwiLCBcInN1bW1hcmllc0hlYWRlckJ1dHRvblRvb2x0aXBcIiwgXCJyZXN1bHRUZW1wbGF0ZVwiLCBcImlzR3JpZEZvcm1hdHRlclwiLCBcInJlbmRlclN1bW1hcnlDZWxsRnVuY1wiLCBcImNvbHVtblNldHRpbmdzXCIsIFwiaW5oZXJpdFwiXSxcbiAgICBvdXRwdXRzOiBbXCJkcm9wRG93bk9wZW5pbmdcIiwgXCJkcm9wRG93bk9wZW5lZFwiLCBcImRyb3BEb3duQ2xvc2luZ1wiLCBcImRyb3BEb3duQ2xvc2VkXCIsIFwic3VtbWFyaWVzQ2FsY3VsYXRpbmdcIiwgXCJzdW1tYXJpZXNDYWxjdWxhdGVkXCIsIFwic3VtbWFyaWVzTWV0aG9kU2VsZWN0aW9uQ2hhbmdlZFwiLCBcInN1bW1hcmllc1RvZ2dsaW5nXCIsIFwic3VtbWFyaWVzVG9nZ2xlZFwiLCBcImRyb3BEb3duT0tDbGlja2VkXCIsIFwiZHJvcERvd25DYW5jZWxDbGlja2VkXCJdXG59KVxuZXhwb3J0IGNsYXNzIElnR3JpZFN1bW1hcmllc0ZlYXR1cmUgZXh0ZW5kcyBGZWF0dXJlPElnR3JpZFN1bW1hcmllcz4ge1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmKSB7XG4gICAgICAgIHN1cGVyKGVsKTtcbiAgICB9XG4gICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICBwdWJsaWMgZGVzdHJveSgpOiB2b2lkIHsgcmV0dXJuOyB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB3aGV0aGVyIHN1bW1hcmllcyByb3dzIGFyZSBoaWRkZW5cbiAgICAgKi9cbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgIHB1YmxpYyBpc1N1bW1hcmllc1Jvd3NIaWRkZW4oKTogdm9pZCB7IHJldHVybjsgfTtcblxuICAgIC8qKlxuICAgICAqIENhbGN1bGF0ZSBzdW1tYXJpZXNcbiAgICAgKi9cbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgIHB1YmxpYyBjYWxjdWxhdGVTdW1tYXJpZXMoKTogdm9pZCB7IHJldHVybjsgfTtcblxuICAgIC8qKlxuICAgICAqIFJlbW92ZSBhbGwgc3VtbWFyaWVzIGRyb3Bkb3duIGJ1dHRvbnMuXG4gICAgICovXG4gICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICBwdWJsaWMgY2xlYXJBbGxGb290ZXJJY29ucygpOiB2b2lkIHsgcmV0dXJuOyB9O1xuXG4gICAgLyoqXG4gICAgICogVG9nZ2xlIGRyb3AgZG93blxuICAgICAqXG4gICAgICogQHBhcmFtIGNvbHVtbktleSAgICB0b2dnbGUgZHJvcCBkb3duIGZvciB0aGUgY29sdW1uIHdpdGggdGhlIHNwZWNpZmllZCBrZXlcbiAgICAgKiBAcGFyYW0gZXZlbnQgICAgZXZlbnQgb2JqZWN0LiBJdHMgZGF0YSBzaG91bGQgY29udGFpbiBjdXJyZW50IGNvbHVtbktleSwgaXNBbmltYXRpbmcsIGJ1dHRvbklkXG4gICAgICovXG4gICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICBwdWJsaWMgdG9nZ2xlRHJvcERvd24oY29sdW1uS2V5OiBzdHJpbmcsIGV2ZW50OiBPYmplY3QpOiB2b2lkIHsgcmV0dXJuOyB9O1xuXG4gICAgLyoqXG4gICAgICogU2hvdy9IaWRlIGRpYWxvZ1xuICAgICAqXG4gICAgICogQHBhcmFtICRkaWFsb2cgICAgIGpRdWVyeSBvYmplY3QgcmVwcmVzZW50YXRpb24gb2YgZHJvcGRvd24gZGl2IGVsZW1lbnRcbiAgICAgKi9cbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgIHB1YmxpYyBzaG93SGlkZURpYWxvZygkZGlhbG9nOiBPYmplY3QpOiB2b2lkIHsgcmV0dXJuOyB9O1xuXG4gICAgLyoqXG4gICAgICogVG9nZ2xlIHN1bW1hcmllcyByb3dzXG4gICAgICpcbiAgICAgKiBAcGFyYW0gaXNUb1Nob3cgICAgU3BlY2lmaWVzIHdoZXRoZXIgdG8gc2hvdyBvciBub3Qgc3VtbWFyaWVzXG4gICAgICogQHBhcmFtIGlzSW50ZXJuYWxDYWxsICAgIE9wdGlvbmFsIHBhcmFtZXRlci5TcGVjaWZpZXMgd2hldGhlciB0aGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCBpbnRlcm5hbGx5IGJ5IHRoZSB3aWRnZXQuXG4gICAgICovXG4gICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICBwdWJsaWMgdG9nZ2xlU3VtbWFyaWVzUm93cyhpc1RvU2hvdzogYm9vbGVhbiwgaXNJbnRlcm5hbENhbGw6IGJvb2xlYW4pOiB2b2lkIHsgcmV0dXJuOyB9O1xuXG4gICAgLyoqXG4gICAgICogVG9nZ2xlcyB0aGUgY2hlY2tzdGF0ZSBvZiBhIGNoZWNrYm94IGlmIGNoZWNrYm94TW9kZSBpcyBub3Qgc2V0IHRvIG9mZiwgb3RoZXJ3aXNlIGRvZXMgbm90aGluZy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSAkY2hlY2tib3ggICAgIFNwZWNpZmllcyB0aGUgalF1ZXJ5IG9iamVjdCBvZiB0aGUgY2hlY2tib3guXG4gICAgICovXG4gICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICBwdWJsaWMgdG9nZ2xlQ2hlY2tzdGF0ZSgkY2hlY2tib3g6IE9iamVjdCk6IHZvaWQgeyByZXR1cm47IH07XG5cbiAgICAvKipcbiAgICAgKiBTZWxlY3QvVW5zZWxlY3Qgc3BlY2lmaWVkIGNoZWNrYm94XG4gICAgICpcbiAgICAgKiBAcGFyYW0gJGNoZWNrYm94ICAgICBTcGVjaWZpZXMgdGhlIGpRdWVyeSBvYmplY3QgZm9yIGNoZWNrYm94XG4gICAgICogQHBhcmFtIGlzVG9TZWxlY3QgICAgIFNwZWNpZnkgd2hldGhlciB0byBzZWxlY3Qgb3Igbm90IGNoZWNrYm94XG4gICAgICovXG4gICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICBwdWJsaWMgc2VsZWN0Q2hlY2tCb3goJGNoZWNrYm94OiBPYmplY3QsIGlzVG9TZWxlY3Q6IGJvb2xlYW4pOiB2b2lkIHsgcmV0dXJuOyB9O1xuXG4gICAgLyoqXG4gICAgICogU3VtbWFyeSBjYWxjdWxhdGUgdGhlIHdob2xlIGRhdGEgZm9yIHRoZSBzcGVjaWZpZWQgY29sdW1uIGtleSwgY29sdW1uTWV0aG9kcyBhbmQgZGF0YVR5cGUgKHVzZWQgd2hlbiBkYXRhc291cmNlIGlzIHJlbW90ZSBhbmQgZGF0YVR5cGUgaXMgZGF0ZSlcbiAgICAgKlxuICAgICAqIEBwYXJhbSBjayAgICBDb2x1bW5LZXlcbiAgICAgKiBAcGFyYW0gY29sdW1uTWV0aG9kcyAgICBBcnJheSBvZiBjb2x1bW4gbWV0aG9kcyBvYmplY3RzXG4gICAgICogQHBhcmFtIGRhdGEgICAgT2JqZWN0IHdoaWNoIHJlcHJlc2VudHMgcmVzdWx0XG4gcmVwcmVzZW50cyBkYXRhVHlwZSBmb3IgdGhlIGN1cnJlbnQgY29sdW1uXG4gICAgKiBAcGFyYW0gZGF0YVR5cGUgXG4gICAgKi9cbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgIHB1YmxpYyBjYWxjdWxhdGVTdW1tYXJ5Q29sdW1uKGNrOiBzdHJpbmcsIGNvbHVtbk1ldGhvZHM6IGFueVtdLCBkYXRhOiBPYmplY3QsIGRhdGFUeXBlOiBPYmplY3QpOiB2b2lkIHsgcmV0dXJuOyB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJuIGEgSlFVRVJZIG9iamVjdCB3aGljaCBob2xkcyBhbGwgc3VtbWFyaWVzIGZvciBhbGwgY29sdW1uc1xuICAgICAqL1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgcHVibGljIHN1bW1hcnlDb2xsZWN0aW9uKCk6IHZvaWQgeyByZXR1cm47IH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm4gYSBKUVVFUlkgb2JqZWN0IHdoaWNoIGhvbGRzIGFsbCBzdW1tYXJpZXMgZm9yIGNvbHVtbiB3aXRoIHRoZSBzcGVjaWZpZWQgY29sdW1uIGtleVxuICAgICAqXG4gICAgICogQHBhcmFtIGNvbHVtbktleSBcbiAgICAgKi9cbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgIHB1YmxpYyBzdW1tYXJpZXNGb3IoY29sdW1uS2V5OiBPYmplY3QpOiB2b2lkIHsgcmV0dXJuOyB9O1xufSJdfQ==