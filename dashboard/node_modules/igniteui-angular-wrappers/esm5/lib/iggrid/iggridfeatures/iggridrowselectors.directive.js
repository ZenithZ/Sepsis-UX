/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ElementRef, Directive } from "@angular/core";
import { Feature } from "../feature";
var IgGridRowSelectorsFeature = /** @class */ (function (_super) {
    tslib_1.__extends(IgGridRowSelectorsFeature, _super);
    function IgGridRowSelectorsFeature(el) {
        return _super.call(this, el) || this;
    }
    /* istanbul ignore next */
    /* istanbul ignore next */
    /**
     * @return {?}
     */
    IgGridRowSelectorsFeature.prototype.destroy = /* istanbul ignore next */
    /**
     * @return {?}
     */
    function () { return; };
    ;
    IgGridRowSelectorsFeature.decorators = [
        { type: Directive, args: [{
                    selector: 'row-selectors',
                    inputs: ["disabled", "create", "enableRowNumbering", "enableCheckBoxes", "rowNumberingSeed", "rowSelectorColumnWidth", "requireSelection", "showCheckBoxesOnFocus", "inherit", "enableSelectAllForPaging", "selectAllForPagingTemplate", "deselectAllForPagingTemplate"],
                    outputs: ["rowSelectorClicked", "checkBoxStateChanging", "checkBoxStateChanged"]
                },] }
    ];
    /** @nocollapse */
    IgGridRowSelectorsFeature.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    return IgGridRowSelectorsFeature;
}(Feature));
export { IgGridRowSelectorsFeature };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWdncmlkcm93c2VsZWN0b3JzLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2lnbml0ZXVpLWFuZ3VsYXItd3JhcHBlcnMvIiwic291cmNlcyI6WyJsaWIvaWdncmlkL2lnZ3JpZGZlYXR1cmVzL2lnZ3JpZHJvd3NlbGVjdG9ycy5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN0RCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRXJDO0lBSytDLHFEQUEyQjtJQUN0RSxtQ0FBWSxFQUFjO2VBQ3RCLGtCQUFNLEVBQUUsQ0FBQztJQUNiLENBQUM7SUFDRCwwQkFBMEI7Ozs7O0lBQ25CLDJDQUFPOzs7O0lBQWQsY0FBeUIsT0FBTyxDQUFDLENBQUM7SUFBQSxDQUFDOztnQkFWdEMsU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxlQUFlO29CQUN6QixNQUFNLEVBQUUsQ0FBQyxVQUFVLEVBQUUsUUFBUSxFQUFFLG9CQUFvQixFQUFFLGtCQUFrQixFQUFFLGtCQUFrQixFQUFFLHdCQUF3QixFQUFFLGtCQUFrQixFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSwwQkFBMEIsRUFBRSw0QkFBNEIsRUFBRSw4QkFBOEIsQ0FBQztvQkFDeFEsT0FBTyxFQUFFLENBQUMsb0JBQW9CLEVBQUUsdUJBQXVCLEVBQUUsc0JBQXNCLENBQUM7aUJBQ25GOzs7O2dCQVBRLFVBQVU7O0lBY25CLGdDQUFDO0NBQUEsQUFYRCxDQUsrQyxPQUFPLEdBTXJEO1NBTlkseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgRGlyZWN0aXZlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEZlYXR1cmUgfSBmcm9tIFwiLi4vZmVhdHVyZVwiO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ3Jvdy1zZWxlY3RvcnMnLFxuICAgIGlucHV0czogW1wiZGlzYWJsZWRcIiwgXCJjcmVhdGVcIiwgXCJlbmFibGVSb3dOdW1iZXJpbmdcIiwgXCJlbmFibGVDaGVja0JveGVzXCIsIFwicm93TnVtYmVyaW5nU2VlZFwiLCBcInJvd1NlbGVjdG9yQ29sdW1uV2lkdGhcIiwgXCJyZXF1aXJlU2VsZWN0aW9uXCIsIFwic2hvd0NoZWNrQm94ZXNPbkZvY3VzXCIsIFwiaW5oZXJpdFwiLCBcImVuYWJsZVNlbGVjdEFsbEZvclBhZ2luZ1wiLCBcInNlbGVjdEFsbEZvclBhZ2luZ1RlbXBsYXRlXCIsIFwiZGVzZWxlY3RBbGxGb3JQYWdpbmdUZW1wbGF0ZVwiXSxcbiAgICBvdXRwdXRzOiBbXCJyb3dTZWxlY3RvckNsaWNrZWRcIiwgXCJjaGVja0JveFN0YXRlQ2hhbmdpbmdcIiwgXCJjaGVja0JveFN0YXRlQ2hhbmdlZFwiXVxufSlcbmV4cG9ydCBjbGFzcyBJZ0dyaWRSb3dTZWxlY3RvcnNGZWF0dXJlIGV4dGVuZHMgRmVhdHVyZTxJZ0dyaWRSb3dTZWxlY3RvcnM+IHtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZikge1xuICAgICAgICBzdXBlcihlbCk7XG4gICAgfVxuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgcHVibGljIGRlc3Ryb3koKTogdm9pZCB7IHJldHVybjsgfTtcbn0iXX0=