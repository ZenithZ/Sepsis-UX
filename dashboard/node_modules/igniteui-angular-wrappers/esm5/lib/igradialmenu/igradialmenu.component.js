/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Renderer, IterableDiffers, ElementRef, KeyValueDiffers, ChangeDetectorRef } from "@angular/core";
import { IgControlBase } from "../igcontrolbase/igcontrolbase";
var IgRadialMenuComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgRadialMenuComponent, _super);
    function IgRadialMenuComponent(el, renderer, differs, kvalDiffers, cdr) {
        return _super.call(this, el, renderer, differs, kvalDiffers, cdr) || this;
    }
    /* istanbul ignore next */
    /* istanbul ignore next */
    /**
     * @param {?} itemKey
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    IgRadialMenuComponent.prototype.itemOption = /* istanbul ignore next */
    /**
     * @param {?} itemKey
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    function (itemKey, key, value) { return; };
    ;
    /* istanbul ignore next */
    /* istanbul ignore next */
    /**
     * @return {?}
     */
    IgRadialMenuComponent.prototype.exportVisualData = /* istanbul ignore next */
    /**
     * @return {?}
     */
    function () { return; };
    ;
    /* istanbul ignore next */
    /* istanbul ignore next */
    /**
     * @return {?}
     */
    IgRadialMenuComponent.prototype.flush = /* istanbul ignore next */
    /**
     * @return {?}
     */
    function () { return; };
    ;
    /* istanbul ignore next */
    /* istanbul ignore next */
    /**
     * @return {?}
     */
    IgRadialMenuComponent.prototype.destroy = /* istanbul ignore next */
    /**
     * @return {?}
     */
    function () { return; };
    ;
    /* istanbul ignore next */
    /* istanbul ignore next */
    /**
     * @return {?}
     */
    IgRadialMenuComponent.prototype.styleUpdated = /* istanbul ignore next */
    /**
     * @return {?}
     */
    function () { return; };
    ;
    IgRadialMenuComponent.decorators = [
        { type: Component, args: [{
                    selector: "ig-radial-menu",
                    template: "<ng-content></ng-content>",
                    inputs: ["widgetId", "options", "changeDetectionInterval", "disabled", "create", "items", "currentOpenMenuItemName", "centerButtonContentWidth", "centerButtonContentHeight", "centerButtonClosedFill", "centerButtonClosedStroke", "centerButtonFill", "centerButtonHotTrackFill", "centerButtonHotTrackStroke", "centerButtonStroke", "centerButtonStrokeThickness", "font", "isOpen", "menuBackground", "menuItemOpenCloseAnimationDuration", "menuItemOpenCloseAnimationEasingFunction", "menuOpenCloseAnimationDuration", "menuOpenCloseAnimationEasingFunction", "minWedgeCount", "outerRingFill", "outerRingThickness", "outerRingStroke", "outerRingStrokeThickness", "rotationInDegrees", "rotationAsPercentageOfWedge", "wedgePaddingInDegrees", "pixelScalingRatio"],
                    outputs: ["formatLabel", "alignLabel", "valueChanged"]
                }] }
    ];
    /** @nocollapse */
    IgRadialMenuComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer },
        { type: IterableDiffers },
        { type: KeyValueDiffers },
        { type: ChangeDetectorRef }
    ]; };
    return IgRadialMenuComponent;
}(IgControlBase));
export { IgRadialMenuComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWdyYWRpYWxtZW51LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2lnbml0ZXVpLWFuZ3VsYXItd3JhcHBlcnMvIiwic291cmNlcyI6WyJsaWIvaWdyYWRpYWxtZW51L2lncmFkaWFsbWVudS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxlQUFlLEVBQUUsVUFBVSxFQUFFLGVBQWUsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNySCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFFL0Q7SUFNMkMsaURBQTJCO0lBQ2xFLCtCQUFZLEVBQWMsRUFBRSxRQUFrQixFQUFFLE9BQXdCLEVBQUUsV0FBNEIsRUFBRSxHQUFzQjtlQUMxSCxrQkFBTSxFQUFFLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxXQUFXLEVBQUUsR0FBRyxDQUFDO0lBQ2xELENBQUM7SUFDRCwwQkFBMEI7Ozs7Ozs7O0lBQ25CLDBDQUFVOzs7Ozs7O0lBQWpCLFVBQWtCLE9BQWUsRUFBRSxHQUFXLEVBQUUsS0FBYSxJQUFVLE9BQU8sQ0FBQyxDQUFDO0lBQUEsQ0FBQztJQUNqRiwwQkFBMEI7Ozs7O0lBQ25CLGdEQUFnQjs7OztJQUF2QixjQUFrQyxPQUFPLENBQUMsQ0FBQztJQUFBLENBQUM7SUFDNUMsMEJBQTBCOzs7OztJQUNuQixxQ0FBSzs7OztJQUFaLGNBQXVCLE9BQU8sQ0FBQyxDQUFDO0lBQUEsQ0FBQztJQUNqQywwQkFBMEI7Ozs7O0lBQ25CLHVDQUFPOzs7O0lBQWQsY0FBeUIsT0FBTyxDQUFDLENBQUM7SUFBQSxDQUFDO0lBQ25DLDBCQUEwQjs7Ozs7SUFDbkIsNENBQVk7Ozs7SUFBbkIsY0FBOEIsT0FBTyxDQUFDLENBQUM7SUFBQSxDQUFDOztnQkFuQjNDLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsZ0JBQWdCO29CQUMxQixRQUFRLEVBQUUsMkJBQTJCO29CQUNyQyxNQUFNLEVBQUUsQ0FBQyxVQUFVLEVBQUUsU0FBUyxFQUFFLHlCQUF5QixFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLDBCQUEwQixFQUFFLDJCQUEyQixFQUFFLHdCQUF3QixFQUFFLDBCQUEwQixFQUFFLGtCQUFrQixFQUFFLDBCQUEwQixFQUFFLDRCQUE0QixFQUFFLG9CQUFvQixFQUFFLDZCQUE2QixFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsZ0JBQWdCLEVBQUUsb0NBQW9DLEVBQUUsMENBQTBDLEVBQUUsZ0NBQWdDLEVBQUUsc0NBQXNDLEVBQUUsZUFBZSxFQUFFLGVBQWUsRUFBRSxvQkFBb0IsRUFBRSxpQkFBaUIsRUFBRSwwQkFBMEIsRUFBRSxtQkFBbUIsRUFBRSw2QkFBNkIsRUFBRSx1QkFBdUIsRUFBRSxtQkFBbUIsQ0FBQztvQkFDL3VCLE9BQU8sRUFBRSxDQUFDLGFBQWEsRUFBRSxZQUFZLEVBQUUsY0FBYyxDQUFDO2lCQUN6RDs7OztnQkFSOEMsVUFBVTtnQkFBckMsUUFBUTtnQkFBRSxlQUFlO2dCQUFjLGVBQWU7Z0JBQUUsaUJBQWlCOztJQXVCN0YsNEJBQUM7Q0FBQSxBQXBCRCxDQU0yQyxhQUFhLEdBY3ZEO1NBZFkscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBSZW5kZXJlciwgSXRlcmFibGVEaWZmZXJzLCBFbGVtZW50UmVmLCBLZXlWYWx1ZURpZmZlcnMsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IElnQ29udHJvbEJhc2UgfSBmcm9tIFwiLi4vaWdjb250cm9sYmFzZS9pZ2NvbnRyb2xiYXNlXCI7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiBcImlnLXJhZGlhbC1tZW51XCIsXG4gICAgdGVtcGxhdGU6IFwiPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlwiLFxuICAgIGlucHV0czogW1wid2lkZ2V0SWRcIiwgXCJvcHRpb25zXCIsIFwiY2hhbmdlRGV0ZWN0aW9uSW50ZXJ2YWxcIiwgXCJkaXNhYmxlZFwiLCBcImNyZWF0ZVwiLCBcIml0ZW1zXCIsIFwiY3VycmVudE9wZW5NZW51SXRlbU5hbWVcIiwgXCJjZW50ZXJCdXR0b25Db250ZW50V2lkdGhcIiwgXCJjZW50ZXJCdXR0b25Db250ZW50SGVpZ2h0XCIsIFwiY2VudGVyQnV0dG9uQ2xvc2VkRmlsbFwiLCBcImNlbnRlckJ1dHRvbkNsb3NlZFN0cm9rZVwiLCBcImNlbnRlckJ1dHRvbkZpbGxcIiwgXCJjZW50ZXJCdXR0b25Ib3RUcmFja0ZpbGxcIiwgXCJjZW50ZXJCdXR0b25Ib3RUcmFja1N0cm9rZVwiLCBcImNlbnRlckJ1dHRvblN0cm9rZVwiLCBcImNlbnRlckJ1dHRvblN0cm9rZVRoaWNrbmVzc1wiLCBcImZvbnRcIiwgXCJpc09wZW5cIiwgXCJtZW51QmFja2dyb3VuZFwiLCBcIm1lbnVJdGVtT3BlbkNsb3NlQW5pbWF0aW9uRHVyYXRpb25cIiwgXCJtZW51SXRlbU9wZW5DbG9zZUFuaW1hdGlvbkVhc2luZ0Z1bmN0aW9uXCIsIFwibWVudU9wZW5DbG9zZUFuaW1hdGlvbkR1cmF0aW9uXCIsIFwibWVudU9wZW5DbG9zZUFuaW1hdGlvbkVhc2luZ0Z1bmN0aW9uXCIsIFwibWluV2VkZ2VDb3VudFwiLCBcIm91dGVyUmluZ0ZpbGxcIiwgXCJvdXRlclJpbmdUaGlja25lc3NcIiwgXCJvdXRlclJpbmdTdHJva2VcIiwgXCJvdXRlclJpbmdTdHJva2VUaGlja25lc3NcIiwgXCJyb3RhdGlvbkluRGVncmVlc1wiLCBcInJvdGF0aW9uQXNQZXJjZW50YWdlT2ZXZWRnZVwiLCBcIndlZGdlUGFkZGluZ0luRGVncmVlc1wiLCBcInBpeGVsU2NhbGluZ1JhdGlvXCJdLFxuICAgIG91dHB1dHM6IFtcImZvcm1hdExhYmVsXCIsIFwiYWxpZ25MYWJlbFwiLCBcInZhbHVlQ2hhbmdlZFwiXVxufSlcbmV4cG9ydCBjbGFzcyBJZ1JhZGlhbE1lbnVDb21wb25lbnQgZXh0ZW5kcyBJZ0NvbnRyb2xCYXNlPElnUmFkaWFsTWVudT4ge1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIsIGRpZmZlcnM6IEl0ZXJhYmxlRGlmZmVycywga3ZhbERpZmZlcnM6IEtleVZhbHVlRGlmZmVycywgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZikge1xuICAgICAgICBzdXBlcihlbCwgcmVuZGVyZXIsIGRpZmZlcnMsIGt2YWxEaWZmZXJzLCBjZHIpO1xuICAgIH1cbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgIHB1YmxpYyBpdGVtT3B0aW9uKGl0ZW1LZXk6IE9iamVjdCwga2V5OiBPYmplY3QsIHZhbHVlOiBPYmplY3QpOiB2b2lkIHsgcmV0dXJuOyB9O1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgcHVibGljIGV4cG9ydFZpc3VhbERhdGEoKTogdm9pZCB7IHJldHVybjsgfTtcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgIHB1YmxpYyBmbHVzaCgpOiB2b2lkIHsgcmV0dXJuOyB9O1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgcHVibGljIGRlc3Ryb3koKTogdm9pZCB7IHJldHVybjsgfTtcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgIHB1YmxpYyBzdHlsZVVwZGF0ZWQoKTogdm9pZCB7IHJldHVybjsgfTtcbn0iXX0=