/// <reference types="ignite-ui" />
import { ElementRef } from "@angular/core";
import { Feature } from "../feature";
export declare class IgGridSortingFeature extends Feature<IgGridSorting> {
    constructor(el: ElementRef);
    /**
     * Sorts the data in a grid column  and updates the UI.
     *
     * @param index     Column key (string) or index (number) - for multi-row grid only column key can be used. Specifies the column which we want to sort. If the mode is multiple, previous sorting states are not cleared.
     * @param direction     Specifies sorting direction (ascending or descending)
     * @param header
     */
    sortColumn(index: Object, direction: Object, header: Object): void;
    /**
     * Sorts the data in grid columns and updates the UI.\
     */
    sortMultiple(): void;
    /**
     * Removes current sorting(for all sorted columns) and updates the UI.
     */
    clearSorting(): void;
    /**
     * Removes sorting for the grid column with the specified columnKey/columnIndex and updates the UI.
     *
     * @param index     Column key (string) or index (number) - for multi-row grid only column key can be used. Specifies the column for which we want to remove sorting. If the mode is multiple, previous sorting states are not cleared.
     * @param header     - if specified client events should be fired
     */
    unsortColumn(index: Object, header: Object): void;
    /**
     * Destroys the sorting feature. Unbinds events, removes added sorting elements, etc.
     */
    destroy(): void;
    /**
     * Opens the multiple sorting dialog.
     */
    openMultipleSortingDialog(): void;
    /**
     * Closes the multiple sorting dialog.
     */
    closeMultipleSortingDialog(): void;
    /**
     * Renders content of multiple sorting dialog - sorted and unsorted columns.
     *
     * @param isToCallEvents
     */
    renderMultipleSortingDialogContent(isToCallEvents: Object): void;
    /**
     * Remove clear button for multiple sorting dialog
     */
    removeDialogClearButton(): void;
}
