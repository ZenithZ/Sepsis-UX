/// <reference types="ignite-ui" />
import { ElementRef, Renderer, IterableDiffers, KeyValueDiffers, ChangeDetectorRef } from "@angular/core";
import { IgEditorBase } from "./igeditorbase";
import { NgModel } from "@angular/forms";
export declare class IgTimePickerComponent extends IgEditorBase<IgTimePicker> {
    model: NgModel;
    constructor(el: ElementRef, renderer: Renderer, differs: IterableDiffers, kvalDiffers: KeyValueDiffers, cdr: ChangeDetectorRef, model: NgModel);
    /**
     * Gets the selected list item.
     */
    getSelectedListItem(): string;
    /**
     * Returns the visibility state of the calendar.
     */
    dropDownVisible(): boolean;
    /**
     * Returns a reference to the drop-down button UI element of the editor.
     */
    dropDownButton(): string;
    /**
     * Gets reference to jquery object which is used as container of drop-down list.
     */
    dropDownContainer(): string;
    /**
     * Finds index of list item by text that matches with the search parameters.
     *
     * @param text The text to search for in the drop down list.
     * @param matchType The rule that is applied for searching the text.
     */
    findListItemIndex(text: string, matchType?: Object): number;
    /**
     * Gets the index of the selected list item. Sets selected item by index.
     *
     * @param index The index of the item that needs to be selected.
     */
    selectedListIndex(index?: number): number;
    value(newValue: Object): void;
    selectDate(): void;
    /**
     * Changes the the regional settings of widget element to the language specified in [options.regional](ui.igdateeditor#options:regional)
     * Note that this method is for rare scenarios, use [regional](ui.igdateeditor#options:regional) option setter
     */
    changeRegional(): void;
    /**
     * Gets selected date as a date object. This method can be used when dataMode is set as either displayModeText or editModeText.
     * In such cases the value() method will not return date object and getSelectedDate() can be used to replace that functionality.
     */
    getSelectedDate(): Date;
    /**
     * Increases the date or time period, depending on the current cursor position.
     *
     * @param delta The increase delta.
     */
    spinUp(delta?: number): void;
    /**
     * Decreases the date or time period, depending on the current cursor position.
     *
     * @param delta The decrease delta.
     */
    spinDown(delta?: number): void;
    /**
     * Returns a reference to the spin up UI element of the editor.
     */
    spinUpButton(): string;
    /**
     * Returns a reference to the spin down UI element of the editor.
     */
    spinDownButton(): string;
    /**
     * Checks if the value in the editor is valid. Note: This function will not trigger automatic notifications.
     */
    isValid(): boolean;
}
