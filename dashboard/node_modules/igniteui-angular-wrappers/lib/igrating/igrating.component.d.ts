/// <reference types="ignite-ui" />
import { ElementRef, Renderer, IterableDiffers, KeyValueDiffers, ChangeDetectorRef } from "@angular/core";
import { IgControlBase } from "../igcontrolbase/igcontrolbase";
export declare class IgRatingComponent extends IgControlBase<IgRating> {
    constructor(el: ElementRef, renderer: Renderer, differs: IterableDiffers, kvalDiffers: KeyValueDiffers, cdr: ChangeDetectorRef);
    /**
     * Gets reference to [igValidator](ui.igvalidator) used by igRating.
     *
     * @param destroy     Request to destroy validator.
     */
    validator(destroy?: boolean): Object;
    /**
     * Triggers validation.
     */
    validate(): boolean;
    /**
     * Gets/Sets (selected) value.
     *
     * @param val     New value which is rendered with selected css.
     * @return number|object     If parameter is not 'number', then exact value rendered with selected css is returned. Otherwise, reference to igRating is returned.
     */
    value(val: number): number | Object;
    /**
     * Gets/Sets hover value.
     *
     * @param val     New value which will be rendered with hover css when rating gets mouse.
     * @return number|object     If parameter is not "number", then last value which was rendered with hover css is returned. Otherwise, reference to igRating is returned.
     */
    valueHover(val?: number): number | Object;
    /**
     * Checks if igRating has focus.
     */
    hasFocus(): boolean;
    /**
     * Sets focus to igRating. That has effect only when options.focusable is enabled.
     */
    focus(): Object;
    /**
     * Destroys igRating widget.
     */
    destroy(): Object;
}
