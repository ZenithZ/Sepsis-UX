/// <reference types="ignite-ui" />
import { ElementRef, Renderer, IterableDiffers, KeyValueDiffers, ChangeDetectorRef } from "@angular/core";
import { IgControlBase } from "../igcontrolbase/igcontrolbase";
export declare class IgRadialGaugeComponent extends IgControlBase<IgRadialGauge> {
    constructor(el: ElementRef, renderer: Renderer, differs: IterableDiffers, kvalDiffers: KeyValueDiffers, cdr: ChangeDetectorRef);
    /**
     * Returns a string containing the names of all the ranges delimited with a \n symbol.
     */
    getRangeNames(): string;
    /**
     * Adds a new range to the radial gauge.
     *
     * @param value
     */
    addRange(value: Object): void;
    /**
     * Removes a specified range.
     *
     * @param value
     */
    removeRange(value: Object): void;
    /**
     * Updates the range.
     *
     * @param value
     */
    updateRange(value: Object): void;
    /**
     * Clears the ranges in the radial gauge.
     */
    clearRanges(): void;
    /**
     * Scales a value on the gauge's main scale to an angle around the center point of the gauge, in radians.
     *
     * @param value
     */
    scaleValue(value: Object): void;
    /**
     * Unscales a value from an angle in radians to the represented value along the main scale of the gauge.
     *
     * @param value
     */
    unscaleValue(value: Object): void;
    /**
     * Gets the value for the main scale of the gauge for a given point within the bounds of the gauge.
     *
     * @param x
     * @param y
     */
    getValueForPoint(x: Object, y: Object): number;
    /**
     * Gets the point on the gauge for a given scale value and extent.
     *
     * @param value
     * @param extent
     */
    getPointForValue(value: Object, extent: Object): void;
    /**
     * Returns true if the main gauge needle bounding box contains the point provided, otherwise false.
     *
     * @param x
     * @param y
     */
    needleContainsPoint(x: Object, y: Object): void;
    /**
     * Exports the visual data for the radial gauge.
     */
    exportVisualData(): void;
    /**
     * Flushes the gauge.
     */
    flush(): void;
    /**
     * Destroys widget.
     */
    destroy(): void;
    /**
     * Returns true if the style was updated for the radial gauge.
     */
    styleUpdated(): void;
}
