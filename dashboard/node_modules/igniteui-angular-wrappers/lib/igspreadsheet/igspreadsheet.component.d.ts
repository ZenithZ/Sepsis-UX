/// <reference types="ignite-ui" />
import { ElementRef, Renderer, IterableDiffers, KeyValueDiffers, ChangeDetectorRef } from "@angular/core";
import { IgControlBase } from "../igcontrolbase/igcontrolbase";
export declare class IgSpreadsheetComponent extends IgControlBase<IgSpreadsheet> {
    constructor(el: ElementRef, renderer: Renderer, differs: IterableDiffers, kvalDiffers: KeyValueDiffers, cdr: ChangeDetectorRef);
    /**
     * Returns an object that represents the pane with the focus.
     */
    getActivePane(): Object;
    /**
     * Returns an object that represents the current selection of the active pane.
     */
    getActiveSelection(): Object;
    /**
     * Returns an object used to get the formatting of the activeCell and where modifications are applied to the entire active selection.
     *				Any changes made to this object will affect all the objects in the selection. So for example, the
    *				Font.Name may return "Arial" because the active cell has that as its resolved font name even though the other
    *				cells are using a different font but if you set the Font.Name of this object to "Arial" then all the objects
    *				affected by the selection will have their Font.Name updated to that value.
    */
    getActiveSelectionCellRangeFormat(): Object;
    /**
     * Returns a boolean indicating if the user is currently editing the name of the active worksheet.
     */
    getIsRenamingWorksheet(): boolean;
    /**
     * Returns an array of the panes for the activeWorksheet.
     *
    *				 returnType="ig.spreadsheet.SpreadsheetPane[]"
    */
    getPanes(): void;
    /**
     * Executes the action associated with the specified id.
     *
     * @param action An [enumeration](ig.spreadsheet.SpreadsheetAction) or string that identifies the action to execute.
     */
    executeAction(action: Object): boolean;
    /**
     * Forces any pending deferred work to render on the spreadsheet before continuing
     */
    flush(): void;
    /**
     * Destroys the widget.
     */
    destroy(): void;
    /**
     * Notify the spreadsheet that style information used for rendering the spreadsheet may have been updated.
     */
    styleUpdated(): void;
}
